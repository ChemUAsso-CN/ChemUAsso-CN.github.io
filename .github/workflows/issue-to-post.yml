name: Convert Issue to Post

on:
  issues:
    types: [labeled]

jobs:
  convert:
    if: github.event.label.name == 'article'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Extract article content
        id: extract
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body;
            
            // 提取 Front Matter 和正文
            const matches = body.match(/---\n([\s\S]*?)\n---\n\n([\s\S]*)/);
            if (!matches) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: '❌ 文章格式不正确，请使用正确的模板格式。'
              });
              return;
            }
            
            const frontMatter = matches[1];
            const content = matches[2];
            
            // 解析 Front Matter
            const meta = {};
            frontMatter.split('\n').forEach(line => {
              const [key, ...value] = line.split(':').map(s => s.trim());
              if (key && value) meta[key] = value.join(':');
            });
            
            // 生成文件名
            const date = new Date().toISOString().split('T')[0];
            const category = meta.categories?.replace(/[\[\]"]/g, '').toLowerCase() || 'uncategorized';
            const fileName = `content/posts/${category}/${date}-${issue.number}.md`;
            
            // 输出结果供后续步骤使用
            core.setOutput('fileName', fileName);
            core.setOutput('content', `---\n${frontMatter}\n---\n\n${content}`);

      - name: Create article file
        run: |
          mkdir -p $(dirname "${{ steps.extract.outputs.fileName }}")
          echo "${{ steps.extract.outputs.content }}" > "${{ steps.extract.outputs.fileName }}"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "${{ steps.extract.outputs.fileName }}"
          git commit -m "Add article from issue #${{ github.event.issue.number }}"
          git push

      - name: Comment on issue
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: '✅ 文章已成功转换并发布！\n\n您可以在网站上查看：' +
                    `https://chemuasso.github.io/posts/${context.payload.issue.number}/`
            });
            
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              state: 'closed',
              labels: ['published']
            }); 