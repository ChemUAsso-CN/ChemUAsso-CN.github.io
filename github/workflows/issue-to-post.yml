            // 验证日期格式
            function isValidDate(dateStr) {
              // 检查格式是否为 YYYY-MM-DD，允许后面有注释
              const regex = /^\d{4}-\d{2}-\d{2}(?:\s*#.*)?$/;
              if (!regex.test(dateStr)) return false;
              
              // 提取日期部分（去掉注释）
              const pureDateStr = dateStr.split('#')[0].trim();
              
              // 检查日期是否有效
              const date = new Date(pureDateStr);
              return date instanceof Date && !isNaN(date);
            }

            const issue = context.payload.issue;
            const body = issue.body;

            try {
              // 提取 Front Matter 和正文
              const matches = body.match(/---\s*([\s\S]*?)\s*---\s*([\s\S]*)/);
              if (!matches) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: '❌ 文章格式不正确，请使用正确的模板格式。'
                });
                
                // 使用 not planned 关闭 issue
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed',
                  state_reason: 'not_planned'
                });
                return;
              }

              let frontMatter = matches[1].trim();
              const content = matches[2].trim();

              // 解析 Front Matter
              const meta = {};
              frontMatter.split('\n').forEach(line => {
                const [key, ...values] = line.split(':').map(s => s.trim());
                if (key && values.length > 0) {
                  const value = values.join(':').trim();
                  if (key === 'categories' || key === 'tags') {
                    meta[key] = value;
                  } else {
                    meta[key] = value.replace(/^["']|["']$/g, '');
                  }
                }
              });

              console.log('Validating date:', meta.date);
              if (!isValidDate(meta.date)) {
                console.log('Date validation failed');
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: '❌ 日期格式不正确，请使用 YYYY-MM-DD 格式（如：2025-02-24）'
                });
                
                // 使用 not planned 关闭 issue
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed',
                  state_reason: 'not_planned'
                });
                return;
              }

              // ... 其余代码保持不变 ...

            } catch (error) {
              console.error('Error:', error);
              core.setFailed(error.message);
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `❌ 处理文章时出错：${error.message}`
              });
            } 